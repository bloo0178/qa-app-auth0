{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\src\\\\qa-app\\\\frontend\\\\src\\\\Questions\\\\Questions.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nvar Questions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Questions, _Component);\n\n  function Questions(props) {\n    var _this;\n\n    _classCallCheck(this, Questions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Questions).call(this, props));\n    _this.state = {\n      questions: null\n    };\n    return _this;\n  }\n\n  _createClass(Questions, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var questions;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://localhost:8081/');\n\n              case 2:\n                questions = _context.sent.data;\n                this.setState({\n                  questions: questions\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/new-question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card text-white bg-secondary mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Need help? Ask here!\"), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"+ New Question\"), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Don't worry. Help is on the way!\")))), this.state.questions === null && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Loading questions...\"), this.state.questions && this.state.questions.map(function (question) {\n        return React.createElement(\"div\", {\n          key: question.id,\n          className: \"col-sm-12 col-md-4 col-lg-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/questions/\".concat(question.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card text-white bg-success mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Answers: \", question.answers), React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, question.title), React.createElement(\"p\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, question.description)))));\n      })));\n    }\n  }]);\n\n  return Questions;\n}(Component);\n\nexport default Questions;","map":{"version":3,"sources":["C:\\src\\qa-app\\frontend\\src\\Questions\\Questions.js"],"names":["React","Component","Link","axios","Questions","props","state","questions","get","data","setState","map","question","id","answers","title","description"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAHe;AAMlB;;;;;;;;;;;;;;uBAG4BJ,KAAK,CAACK,GAAN,CAAU,wBAAV,C;;;AAAnBD,gBAAAA,S,iBAAwDE,I;AAC9D,qBAAKC,QAAL,CAAc;AACVH,kBAAAA,SAAS,EAATA;AADU,iBAAd;;;;;;;;;;;;;;;;6BAKK;AACL,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,EAEA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFA,CAFA,CADA,CADA,EAUK,KAAKD,KAAL,CAAWC,SAAX,KAAyB,IAAzB,IAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAVtC,EAYQ,KAAKD,KAAL,CAAWC,SAAX,IAAwB,KAAKD,KAAL,CAAWC,SAAX,CAAqBI,GAArB,CAAyB,UAAAC,QAAQ;AAAA,eACrD;AAAK,UAAA,GAAG,EAAEA,QAAQ,CAACC,EAAnB;AAAuB,UAAA,SAAS,EAAC,6BAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,uBAAgBD,QAAQ,CAACC,EAAzB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAuCD,QAAQ,CAACE,OAAhD,CADJ,EAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BF,QAAQ,CAACG,KAArC,CADJ,EAEI;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BH,QAAQ,CAACI,WAAnC,CAFJ,CAFJ,CADJ,CADJ,CADqD;AAAA,OAAjC,CAZhC,CADJ,CADJ;AA+BH;;;;EAhDmBf,S;;AAoDxB,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Questions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            questions: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const questions = (await axios.get('http://localhost:8081/')).data;\r\n        this.setState({\r\n            questions,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                <Link to=\"/new-question\">\r\n                <div className=\"card text-white bg-secondary mb-3\">\r\n                <div className=\"card-header\">Need help? Ask here!</div>\r\n                <div className=\"card-body\">\r\n                <h4 className=\"card-title\">+ New Question</h4>\r\n                <p className=\"card-text\">Don't worry. Help is on the way!</p>\r\n                </div>\r\n                </div>\r\n                </Link>\r\n                    {this.state.questions === null && <p>Loading questions...</p>}\r\n                    {\r\n                        this.state.questions && this.state.questions.map(question => (\r\n                            <div key={question.id} className=\"col-sm-12 col-md-4 col-lg-3\">\r\n                                <Link to={`/questions/${question.id}`}>\r\n                                    <div className=\"card text-white bg-success mb-3\">\r\n                                        <div className=\"card-header\">Answers: {question.answers}</div>\r\n                                        <div className=\"card-body\">\r\n                                            <h4 className=\"card-title\">{question.title}</h4>\r\n                                            <p className=\"card-text\">{question.description}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Questions;"]},"metadata":{},"sourceType":"module"}