{"ast":null,"code":"import _classCallCheck from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport auth0 from 'auth0-js'; // creating a module that defines the Auth class with seven methods\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: 'bloo0178.auth0.com',\n      audience: 'https://bloo0178.auth0.com/userinfo',\n      clientID: '6Y3n6979VoVpjiiuF6ZPjEoGTpIw3h1H',\n      redirectUri: 'http://localhost:3000/callback',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.getProfile = this.getProfile.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.signIn = this.signIn.bind(this);\n    this.signOut = this.signOut.bind(this);\n  }\n\n  _createClass(Auth, [{\n    key: \"getProfile\",\n    value: function getProfile() {\n      return this.profile;\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      return this.idToken;\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return new Date().getTime() < this.expiresAt;\n    }\n  }, {\n    key: \"signIn\",\n    value: function signIn() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.auth0.parseHash(function (err, authResult) {\n          if (err) return reject(err);\n\n          if (!authResult || !authResult.idToken) {\n            return reject(err);\n          }\n\n          _this.setSession(authResult);\n\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult, step) {\n      this.idToken = authResult.idToken;\n      this.profile = authResult.idTokenPayload; //set the time that the id token will expire at\n\n      this.expiresAt = authResult.expiresIn * 1000 + new Date().getTime();\n    }\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      this.auth0.logout({});\n    }\n  }]);\n\n  return Auth;\n}(); // create instance of the Auth class and expose it\n\n\nvar auth0Client = new Auth();\nexport default auth0Client;","map":{"version":3,"sources":["C:\\src\\qa-app\\frontend\\src\\Auth.js"],"names":["auth0","Auth","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","getProfile","bind","handleAuthentication","isAuthenticated","signIn","signOut","profile","idToken","Date","getTime","expiresAt","authorize","Promise","resolve","reject","parseHash","err","authResult","setSession","step","idTokenPayload","expiresIn","logout","auth0Client"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,UAAlB,C,CAEA;;IAEMC,I;;;AACF,kBAAc;AAAA;;AACV,SAAKD,KAAL,GAAa,IAAIA,KAAK,CAACE,OAAV,CAAkB;AAC3BC,MAAAA,MAAM,EAAE,oBADmB;AAE3BC,MAAAA,QAAQ,EAAE,qCAFiB;AAG3BC,MAAAA,QAAQ,EAAE,kCAHiB;AAI3BC,MAAAA,WAAW,EAAE,gCAJc;AAK3BC,MAAAA,YAAY,EAAE,gBALa;AAM3BC,MAAAA,KAAK,EAAE;AANoB,KAAlB,CAAb;AASA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,MAAL,GAAc,KAAKA,MAAL,CAAYH,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKI,OAAL,GAAe,KAAKA,OAAL,CAAaJ,IAAb,CAAkB,IAAlB,CAAf;AACH;;;;iCAEY;AACT,aAAO,KAAKK,OAAZ;AACH;;;iCAEY;AACT,aAAO,KAAKC,OAAZ;AACH;;;sCAEiB;AACd,aAAO,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,KAAKC,SAAnC;AACH;;;6BAEQ;AACL,WAAKnB,KAAL,CAAWoB,SAAX;AACH;;;2CAEsB;AAAA;;AACnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAA,KAAI,CAACvB,KAAL,CAAWwB,SAAX,CAAqB,UAACC,GAAD,EAAMC,UAAN,EAAqB;AACtC,cAAID,GAAJ,EAAS,OAAOF,MAAM,CAACE,GAAD,CAAb;;AACT,cAAI,CAACC,UAAD,IAAe,CAACA,UAAU,CAACV,OAA/B,EAAwC;AACpC,mBAAOO,MAAM,CAACE,GAAD,CAAb;AACH;;AACD,UAAA,KAAI,CAACE,UAAL,CAAgBD,UAAhB;;AACAJ,UAAAA,OAAO;AACV,SAPD;AAQH,OATM,CAAP;AAUH;;;+BAEUI,U,EAAYE,I,EAAM;AACzB,WAAKZ,OAAL,GAAeU,UAAU,CAACV,OAA1B;AACA,WAAKD,OAAL,GAAeW,UAAU,CAACG,cAA1B,CAFyB,CAGzB;;AACA,WAAKV,SAAL,GAAiBO,UAAU,CAACI,SAAX,GAAuB,IAAvB,GAA8B,IAAIb,IAAJ,GAAWC,OAAX,EAA/C;AACH;;;8BAES;AACN,WAAKlB,KAAL,CAAW+B,MAAX,CAAkB,EAAlB;AAGH;;;;KAGL;;;AAEA,IAAMC,WAAW,GAAG,IAAI/B,IAAJ,EAApB;AAEA,eAAe+B,WAAf","sourcesContent":["import auth0 from 'auth0-js';\r\n\r\n// creating a module that defines the Auth class with seven methods\r\n\r\nclass Auth {\r\n    constructor() {\r\n        this.auth0 = new auth0.WebAuth({\r\n            domain: 'bloo0178.auth0.com',\r\n            audience: 'https://bloo0178.auth0.com/userinfo',\r\n            clientID: '6Y3n6979VoVpjiiuF6ZPjEoGTpIw3h1H',\r\n            redirectUri: 'http://localhost:3000/callback',\r\n            responseType: 'token id_token',\r\n            scope: 'openid profile'\r\n        });\r\n\r\n        this.getProfile = this.getProfile.bind(this);\r\n        this.handleAuthentication = this.handleAuthentication.bind(this);\r\n        this.isAuthenticated = this.isAuthenticated.bind(this);\r\n        this.signIn = this.signIn.bind(this);\r\n        this.signOut = this.signOut.bind(this);\r\n    }\r\n\r\n    getProfile() {\r\n        return this.profile;\r\n    }\r\n\r\n    getIdToken() {\r\n        return this.idToken;\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return new Date().getTime() < this.expiresAt;\r\n    }\r\n\r\n    signIn() {\r\n        this.auth0.authorize();\r\n    }\r\n\r\n    handleAuthentication() {\r\n        return new Promise((resolve, reject) => {\r\n            this.auth0.parseHash((err, authResult) => {\r\n                if (err) return reject(err);\r\n                if (!authResult || !authResult.idToken) {\r\n                    return reject(err);\r\n                }\r\n                this.setSession(authResult);\r\n                resolve();\r\n            });\r\n        })\r\n    }\r\n\r\n    setSession(authResult, step) {\r\n        this.idToken = authResult.idToken;\r\n        this.profile = authResult.idTokenPayload;\r\n        //set the time that the id token will expire at\r\n        this.expiresAt = authResult.expiresIn * 1000 + new Date().getTime();\r\n    }\r\n\r\n    signOut() {\r\n        this.auth0.logout({\r\n            \r\n        })\r\n    }\r\n}\r\n\r\n// create instance of the Auth class and expose it\r\n\r\nconst auth0Client = new Auth();\r\n\r\nexport default auth0Client;"]},"metadata":{},"sourceType":"module"}