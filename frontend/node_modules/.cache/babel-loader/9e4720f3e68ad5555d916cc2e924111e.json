{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\src\\\\qa-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\src\\\\qa-app\\\\frontend\\\\src\\\\Question\\\\Question.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SubmitAnswer from './SubmitAnswer';\nimport auth0Client from '../Auth';\n\nvar Question =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Question, _Component);\n\n  function Question(props) {\n    var _this;\n\n    _classCallCheck(this, Question);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Question).call(this, props));\n    _this.state = {\n      question: null\n    };\n    _this.submitAnswer = _this.submitAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Question, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.refreshQuestion();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"refreshQuestion\",\n    value: function () {\n      var _refreshQuestion = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var params, question;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                params = this.props.match.params;\n                _context2.next = 3;\n                return axios.get(\"http://localhost:8081/\".concat(params.questionId));\n\n              case 3:\n                question = _context2.sent.data;\n                this.setState({\n                  question: question\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function refreshQuestion() {\n        return _refreshQuestion.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"sukbmitAnswer\",\n    value: function () {\n      var _sukbmitAnswer = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(answer) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.post(\"http://localhost:8081/answer/\".concat(this.state.question.id), {\n                  answer: answer\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function sukbmitAnswer(_x) {\n        return _sukbmitAnswer.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var question = this.state.question;\n      if (question === null) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Loading...\");\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jumbotron col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, question.title), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, question.description), React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Answers:\"), question.answers.map(function (answer, idx) {\n        return React.createElement(\"p\", {\n          className: \"lead\",\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, answer.answer);\n      }))));\n    }\n  }]);\n\n  return Question;\n}(Component);\n\nexport default Question;","map":{"version":3,"sources":["C:\\src\\qa-app\\frontend\\src\\Question\\Question.js"],"names":["React","Component","axios","SubmitAnswer","auth0Client","Question","props","state","question","submitAnswer","bind","refreshQuestion","params","match","get","questionId","data","setState","answer","post","id","title","description","answers","map","idx"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,SAAxB;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AANe;AAOlB;;;;;;;;;;;;;uBAGS,KAAKC,eAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;AAIWC,gBAAAA,M,GAAa,KAAKN,K,CAA3BO,K,CAASD,M;;uBACOV,KAAK,CAACY,GAAN,iCAAmCF,MAAM,CAACG,UAA1C,E;;;AAAlBP,gBAAAA,Q,kBAA2EQ,I;AACjF,qBAAKC,QAAL,CAAc;AACVT,kBAAAA,QAAQ,EAARA;AADU,iBAAd;;;;;;;;;;;;;;;;;;;iDAKgBU,M;;;;;;uBACVhB,KAAK,CAACiB,IAAN,wCAA2C,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY,EAA/D,GAAqE;AACvEF,kBAAAA,MAAM,EAANA;AADuE,iBAArE,C;;;;;;;;;;;;;;;;6BAKD;AAAA,UACGV,QADH,GACgB,KAAKD,KADrB,CACGC,QADH;AAEL,UAAIA,QAAQ,KAAK,IAAjB,EAAuB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACvB,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BA,QAAQ,CAACa,KAApC,CADJ,EAEI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBb,QAAQ,CAACc,WAA9B,CAFJ,EAGI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EAMQd,QAAQ,CAACe,OAAT,CAAiBC,GAAjB,CAAqB,UAACN,MAAD,EAASO,GAAT;AAAA,eACjB;AAAG,UAAA,SAAS,EAAC,MAAb;AAAoB,UAAA,GAAG,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BP,MAAM,CAACA,MAAtC,CADiB;AAAA,OAArB,CANR,CADJ,CADJ,CADJ;AAiBH;;;;EAhDkBjB,S;;AAmDvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport SubmitAnswer from './SubmitAnswer';\r\nimport auth0Client from '../Auth';\r\n\r\nclass Question extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            question: null,\r\n        };\r\n\r\n        this.submitAnswer = this.submitAnswer.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.refreshQuestion();\r\n    }\r\n\r\n    async refreshQuestion() {\r\n        const { match: { params } } = this.props;\r\n        const question = (await axios.get(`http://localhost:8081/${params.questionId}`)).data;\r\n        this.setState({\r\n            question,\r\n        });\r\n    }\r\n\r\n    async sukbmitAnswer(answer) {\r\n        await axios.post(`http://localhost:8081/answer/${this.state.question.id}`, {\r\n            answer,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { question } = this.state;\r\n        if (question === null) return <p>Loading...</p>;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"jumbotron col-12\">\r\n                        <h1 className=\"display-3\">{question.title}</h1>\r\n                        <p className=\"lead\">{question.description}</p>\r\n                        <hr className=\"my-4\" />\r\n                        <p>Answers:</p>\r\n                        {\r\n                            question.answers.map((answer, idx) => (\r\n                                <p className=\"lead\" key={idx}>{answer.answer}</p>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}